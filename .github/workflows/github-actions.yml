name: Run Python Schedules
run-name: ${{ github.actor }} is running the test schedules.
on:
  push:
    branches:
      - main
      - GH_actions_test

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Start Postgres
      - name: start Postgres
        run: |
          sudo systemctl start postgresql.service
          sudo systemctl status postgresql.service
          sudo pg_isready
          echo "This is who I am:"
          echo ${{ github.actor }}
          sudo pg_config
          echo "After pg_config"
          sudo -u postgres createuser -s -w -e lcusr       
          echo "After createuser"
          sudo -u postgres psql -c '\du'
          echo "After psql"

          ls -l /usr/lib/postgresql/14/bin
 
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ autoconf automake libgeos-dev libproj-dev libgdal-dev libjson-c-dev gettext libxml2-dev postgresql-server-dev-14 postgresql-client-14 libprotobuf-c-dev libprotoc-dev protobuf-c-compiler

      - name: Checkout snowflake
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Add permissions
        run: |
          sudo chmod -R a+w ${GITHUB_WORKSPACE}
          sudo chmod -R a+w ~/work/snowflake/snowflake

      - name: Build Snowflake
        run: |
          cd ~/work/snowflake/snowflake
          sudo USE_PGXS=1 make install

      # Set up Python environment
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
           
      # Install apt dependencies
      - name: Install apt dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y libpq-dev python3-dev build-essential python3-psycopg2 python3-dotenv
          echo $PATH

      # Install pip dependencies
      - name: Install pip dependencies
        run: |
          python -m pip install --upgrade pip
          sudo pip install psycopg2-binary 

      - name: Update pg_hba.conf
        run: |
          sudo sed -i "s/peer/trust/g" /etc/postgresql/15/main/pg_hba.conf
          sudo sed -i "s/md5/trust/g" /etc/postgresql/15/main/pg_hba.conf
          sudo service postgresql restart

      # Run the tests here
      - name: Run the test schedule
        run: |
          python test/runner.py -c test/t/lib/config.env -s test/schedule_files/script_file -k
      

      # Upload log file as artifact of run
      - name: Upload Log File as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: latest-log
          path: latest.log

      # Verify output (GitHub Actions should fail the job if any script raises an error)
      - name: Verify success
        if: success()
        run: echo "All scripts executed successfully. Pull request can be merged."



